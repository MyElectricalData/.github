name: "Docker Build & Push"

on:
  workflow_call:
    inputs:
      CONTEXT:
        required: false
        description: "Dockerfile path"
        default: "./"
        type: string
      DOCKERFILE_NAME:
        required: false
        description: "Dockerfile filename"
        default: "Dockerfile"
        type: string
      IMAGE_REPO:
        required: true
        description: "Image repository"
        type: string
      IMAGE_NAME:
        required: true
        description: "Image Name"
        type: string
      PUSH:
        required: false
        description: "Push on repository"
        default: true
        type: boolean
      TAG:
        required: true
        description: "Discord Webhook"
        type: string
      LATEST:
        required: false
        description: "Build Latest image"
        default: false
        type: boolean
      LATEST_DEV:
        required: false
        description: "Build Latest Dev image"
        default: true
        type: boolean
    secrets:
      DOCKERHUB_TOKEN:
        required: true

jobs:

  #################################################################################################################
  # SEMANTIC RELEASE
  Build-Push-Docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #################################################################################################################
      # SETUP DOCKER
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ inputs.IMAGE_REPO }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      #################################################################################################################
      # VERSION
      - name: Build tags variable
        shell: bash
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          
          IMAGE_PATH="${{ inputs.IMAGE_REPO }}/${{ inputs.IMAGE_NAME }}"
          echo "${IMAGE_PATH}"
          TAGS="${IMAGE_PATH}:${{ inputs.TAG }},"
          echo "${TAGS}"
          if [ "${{ inputs.LATEST }}" == "true" ]; then
            TAGS="${TAGS}${IMAGE_PATH}:latest,"
            echo "${TAGS}"
          fi
          if [ "${{ inputs.LATEST_DEV }}" == "true" ]; then
            TAGS="${TAGS}${IMAGE_PATH}:latest-dev,"
            echo "${TAGS}"
          fi
          echo "TAGS=${TAGS}" >> "$GITHUB_ENV"
          echo "${TAGS}"

      - name: Build and push ${{ inputs.VERSION }} / latest-dev
        uses: docker/build-push-action@v5
        with:
          file: ${{ inputs.DOCKERFILE_NAME }}
          platforms: ${{ matrix.platform }}
          context: ${{ inputs.CONTEXT }}
          push: ${{ inputs.PUSH }}
          tags: |
            ${{ env.TAGS }}